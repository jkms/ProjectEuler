#  problem18.py
#  
#  Copyright 2015 John Stafford <john@jkms.me>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  

#!/usr/bin/env python

file = open('problem18.txt', 'r')

pyramid = []
for line in file:
	pyramid.append(list(line.split()))
	for x in range(len(pyramid[-1])):
		pyramid[-1][x] = int(pyramid[-1][x])

def draw_pyramid(pyramid,xoffset=0,yoffset=0,distance=""):
	if distance == "":
		distance=len(pyramid)-yoffset
	for y in xrange(distance):
		tempstring=""
		for x in xrange(y+1):
			#~ tempstring = tempstring + "\033[0;;" + str(colors[int(pyramid[y+yoffset][x+xoffset])]) + "m" + str(pyramid[y+yoffset][x+xoffset]) + "\033[0m"
			tempstring = tempstring + str(pyramid[y+yoffset][x+xoffset]) + " "
		print tempstring

def sum_tree(pyramid,xoffset=0,yoffset=0):
	newtree=pyramid
	sum = 0;
	for y in range(len(newtree)-2,-1,-1):
		#~ print "level", y
		for x in range(0,y+1):
			#~ print y,x,":",newtree[y][x], "+", max(newtree[y+1][x], newtree[y+1][x+1]), "=", newtree[y][x] + max(newtree[y+1][x], newtree[y+1][x+1])
			newtree[y][x] = newtree[y][x] + max(newtree[y+1][x], newtree[y+1][x+1])
	return newtree

#~ draw_pyramid(pyramid)
sumtree = sum_tree(pyramid)
#~ draw_pyramid(pyramid)

print "the answer is", sumtree[0][0]
#Best answers are 1074, 7185 for 18 and 67 respectively
